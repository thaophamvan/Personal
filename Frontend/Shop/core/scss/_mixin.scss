@mixin clearfix() {
  &:before,
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin dotdotdot($font-size: $paragraph-font-size, $line-height: 1.4, $lines-to-show: 3, $excerpt-bg: transparent) {
  background: $excerpt-bg;
  display: block; /* Fallback for non-webkit */
  display: -webkit-box;
  max-height: $font-size * $line-height * $lines-to-show; /* Fallback for non-webkit */
  font-size: $font-size;
  line-height: $line-height;
  -webkit-line-clamp: $lines-to-show;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  // Fallback for non-webkit
  @media screen and (min--moz-device-pixel-ratio: 0),
    screen and (-ms-high-contrast: active),
    screen and (-ms-high-contrast: none) {
    overflow: hidden;
    position: relative;
    &:before {
      background: $excerpt-bg;
      bottom: 0;
      position: absolute;
      right: 0;
      float: right;
      content: "\2026";
      margin-left: -3rem;
      width: 3rem;
    }
    &:after {
      content: "";
      background: $excerpt-bg;
      position: absolute;
      height: 50px;
      width: 100%;
      z-index: 1;
    }
  }
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
  // to do woff woff2
  $src: null;

  $extmods: (
    eot: "?#iefix",
    svg: "#" + str-replace($name, " ", "_"),
  );

  $formats: (
    eot: "embedded-opentype",
    ttf: "truetype",
  );

  @each $ext in $exts {
    $extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
    $format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
    $src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
  }

  @font-face {
    font-family: quote($name);
    font-style: $style;
    font-weight: $weight;
    src: $src;
    font-display: fallback;
  }
}

@mixin ie {
  @media screen and (min-width: 0\0) {
    @content;
  }
}
@mixin transform($transforms) {
  transform: $transforms;
}

@mixin dsiplayFlex() {
  display: flex;
}

@mixin fs($sizeValue: 16) {
  font-size: $sizeValue/16 + rem;
}

// rotate
@mixin rotate($deg) {
  @include transform(rotate(#{$deg}deg));
}

// scale
@mixin scale($scale) {
  @include transform(scale($scale));
}

// translate
@mixin translate($x, $y) {
  @include transform(translate($x, $y));
}

// skew
@mixin skew($x, $y) {
  @include transform(skew(#{$x}deg, #{$y}deg));
}

//transform origin
@mixin transform-origin($origin) {
  transform-origin: $origin;
}

//Font Weight
@mixin text-bold {
  font-weight: bold;
}

@mixin text-semibold {
  font-weight: 600;
}

@mixin text-regular {
  @include fs(16);
  line-height: 1.5;
}

@mixin text-regular-semibold {
  @include text-regular;
  @include text-semibold;
}


@mixin property($prop, $value) {
  @if isNotEmpty($value) {
    #{$prop}: $value;
  }
}

@mixin animation($animation) {
  @if isNotEmpty($animation) {
    @each $prop, $val in $animation {
      #{$prop}: $val;
    }
  }
}
